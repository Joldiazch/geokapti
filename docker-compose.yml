version: '3'
services:
  app:
    build: .
    ports:
      - '8000:8000'
    depends_on:
      - rabbitmq
      - db
      - celery-worker
    environment:
      - CELERY_BROKER_URL=amqp://rabbitmq
      - CELERY_RESULT_BACKEND=redis://redis

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - '5672:5672'
      - '15672:15672'

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  db:
    image: postgres:latest
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_DB=geokapti_database
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data

  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    depends_on:
      - rabbitmq
      - redis
    environment:
      - CELERY_BROKER_URL=amqp://rabbitmq
      - CELERY_RESULT_BACKEND=redis://redis
      - CELERY_IGNORE_RESULT = False
      - CELERY_TRACK_STARTED = True
    command: celery -A app.api.celery worker --loglevel=info

volumes:
  postgres_data: